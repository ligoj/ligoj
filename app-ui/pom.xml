<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ligoj.bootstrap</groupId>
		<artifactId>bootstrap-web-parent</artifactId>
		<version>3.0.1</version>
		<relativePath />
	</parent>

	<groupId>org.ligoj.app</groupId>
	<artifactId>app-ui</artifactId>
	<version>3.2.4-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Ligoj - UI</name>
	<properties>
		<sonar.sources>src/main/java</sonar.sources>
	</properties>
	<scm>
		<connection>scm:git:https://github.com/ligoj/ligoj.git</connection>
		<developerConnection>scm:git:https://github.com/ligoj/ligoj.git</developerConnection>
		<url>https://github.com/ligoj/ligoj</url>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-proxy</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.ligoj</groupId>
			<artifactId>simplecaptcha</artifactId>
			<version>2.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.ligoj</groupId>
					<artifactId>plugin-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.maven</groupId>
					<artifactId>maven-artifacts</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.enterprise</groupId>
					<artifactId>jakarta.enterprise.cdi-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.annotation</groupId>
					<artifactId>jakarta.annotation-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ligoj.bootstrap</groupId>
					<artifactId>bootstrap-business</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ligoj.bootstrap</groupId>
					<artifactId>bootstrap-business-test</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.quartz-scheduler</groupId>
					<artifactId>quartz</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-collections4</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.xmlunit</groupId>
					<artifactId>xmlunit-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.ligoj.boot.web.Application</mainClass>
				</configuration>
			</plugin>
        </plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>github</id>
			<distributionManagement>
				<repository>
					<id>github-ligoj</id>
					<name>GitHub Packages</name>
					<url>https://maven.pkg.github.com/ligoj/ligoj</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>minify2</id>
			<properties>
				<reference-html>${basedir}/src/main/webapp/index.html</reference-html>
				<theme>bootstrap-material-design</theme>
				<target-css>${basedir}/src/main/webapp/themes/${theme}/css/_.css</target-css>

				<reference-login-html>${basedir}/src/main/webapp/login.html</reference-login-html>
				<target-login-css>${basedir}/src/main/webapp/themes/${theme}/css/_login.css</target-login-css>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>minify</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="Minify core JS, user CSS and user JS">
										<exec executable="node">
											<arg value="${basedir}/src/main/build/r.js" />
											<arg value="-o" />
											<arg value="${basedir}/src/main/build/build.js" />
											<arg value="baseUrl=${basedir}/src/main/webapp/lib" />
											<arg value="dir=${basedir}/src/main/webapp/dist" />
										</exec>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>minify-css</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="Minify CSS">
										<delete file="${target-css}.lst" quiet="true" />
										<copy file="${reference-html}" tofile="${target-css}.lst" />
										<replaceregexp file="${target-css}.lst"
											match=".*&lt;link\s+.*rel\s*=\s*&quot;stylesheet&quot;.*href\s*=\s*&quot;(.*?)&quot;\s+.*$"
											replace="${line.separator}###\1" byline="false" flags="mg"
											encoding="utf-8" />
										<replaceregexp file="${target-css}.lst"
											match="^(?!###).*$" replace="" byline="true" flags="g"
											encoding="utf-8" />
										<replaceregexp file="${target-css}.lst"
											match="[&quot;?].*" replace="" byline="true" flags="g"
											encoding="utf-8" />
										<replaceregexp file="${target-css}.lst"
											match="\r?\n\s*\r?\n" replace="" byline="false" flags="gm"
											encoding="utf-8" />
										<replaceregexp file="${target-css}.lst"
											match="###" replace=",src/main/webapp/" byline="true"
											flags="g" encoding="utf-8" />
										<replaceregexp file="${target-css}.lst"
											match="," replace="" byline="false" encoding="utf-8" />
										<loadfile property="css-files"
											srcFile="${target-css}.lst" />
										<delete file="${target-css}.lst" quiet="true" />
										<delete file="${target-css}.tmp" quiet="true" />
										<concat destfile="${target-css}.tmp">
											<filelist dir="${basedir}" files="${css-files}" />
										</concat>
										<echo message="Concat succeed in ${target-css}.tmp" />

										<condition property="windows">
											<os family="windows" />
										</condition>
										<condition property="nodejs.ext" value=".cmd">
											<isset property="windows" />
										</condition>
										<condition property="nodejs.ext" value="">
											<not>
												<isset property="nodejs.ext" />
											</not>
										</condition>
										<exec executable="cleancss${nodejs.ext}">
											<arg value="-O2" />
											<arg value="-o" />
											<arg value="${target-css}" />
											<arg value="${target-css}.tmp" />
										</exec>
										<delete file="${target-css}.tmp" quiet="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>minify-login-css</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="Minify Login CSS">
										<delete file="${target-login-css}.lst" quiet="true" />
										<copy file="${reference-login-html}"
											tofile="${target-login-css}.lst" />
										<replaceregexp file="${target-login-css}.lst"
											match=".*&lt;link\s+.*rel\s*=\s*&quot;stylesheet&quot;.*href\s*=\s*&quot;(.*?)&quot;\s+.*$"
											replace="${line.separator}###\1" byline="false" flags="mg"
											encoding="utf-8" />
										<replaceregexp file="${target-login-css}.lst"
											match="^(?!###).*$" replace="" byline="true" flags="g"
											encoding="utf-8" />
										<replaceregexp file="${target-login-css}.lst"
											match="[&quot;?].*" replace="" byline="true" flags="g"
											encoding="utf-8" />
										<replaceregexp file="${target-login-css}.lst"
											match="\r?\n\s*\r?\n" replace="" byline="false" flags="gm"
											encoding="utf-8" />
										<replaceregexp file="${target-login-css}.lst"
											match="###" replace=",src/main/webapp/" byline="true"
											flags="g" encoding="utf-8" />
										<replaceregexp file="${target-login-css}.lst"
											match="," replace="" byline="false" encoding="utf-8" />
										<loadfile property="css-files"
											srcFile="${target-login-css}.lst" />
										<delete file="${target-login-css}.lst" quiet="true" />
										<delete file="${target-login-css}.tmp" quiet="true" />
										<concat destfile="${target-login-css}.tmp">
											<filelist dir="${basedir}" files="${css-files}" />
										</concat>
										<echo message="Concat succeed in ${target-login-css}.tmp" />

										<condition property="windows">
											<os family="windows" />
										</condition>
										<condition property="nodejs.ext" value=".cmd">
											<isset property="windows" />
										</condition>
										<condition property="nodejs.ext" value="">
											<not>
												<isset property="nodejs.ext" />
											</not>
										</condition>
										<exec executable="cleancss${nodejs.ext}">
											<arg value="-O2" />
											<arg value="-o" />
											<arg value="${target-login-css}" />
											<arg value="${target-login-css}.tmp" />
										</exec>
										<delete file="${target-login-css}.tmp" quiet="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>